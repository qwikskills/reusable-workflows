name: "Build Application ðŸš§"
description: "Building Frontend Applications"

inputs:
  APP_NAME:
    description: "App Name"
    required: true
  APP_DIR:
    description: "App Directory"
    required: true
  NODE_VERSION:
    description: "Node Version"
    required: true
  API_URL:
    description: "Backend API URL"
    required: true
  RAZORPAY_KEY_ID:
    description: "Razorpay Key ID"
    required: false
  ENTERPRISE_API_URL:
    description: "Enterprise API URL"
    required: true
  IMAGE_FILE_URL:
    description: "Image and File URL"
    required: true
  MAIL_URL:
    description: "Mail server URL"
    required: true
  CUSTOM_VERFICATION_URL:
    description: "Custom Verification URL"
    required: false
  COGNITO_IDENTITYPOOL_ID:
    description: "Cognito Identity Pool ID"
    required: false
  COGNITO_REGION:
    description: "Cognito Region"
    required: false
  COGNITO_USERPOOLID:
    description: "Cognito User Pool ID"
    required: false
  COGNITO_USERPOOLWEBCLIENTID:
    description: "Cognito User Pool Web Client ID"
    required: false
  COGNITO_DOMAIN:
    description: "Cognito Domain"
    required: false
  COGNITO_REDIRECTSIGNIN:
    description: "Cognito Redirecgt SignIn URL"
    required: false
  COGNITO_REDIRECTSIGNOUT:
    description: "Cognito Redirecgt Sign Out URL"
    required: false
  COGNITO_RESPONSETYPE:
    description: "Cognito Response Type"
    required: false
  APP_ENV:
    description: "Application Env"
    required: true
  TINYMCE_KEY:
    description: "TinyMCE Key"
    required: false
  SAWOLAB_KEY:
    description: "SAWOLab Key"
    required: false
  PAT_TOKEN:
    description: "PAT Token"
    required: false

runs:
  using: composite
  steps:
    - name: Setup Node ${{ inputs.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ inputs.NODE_VERSION }}
        
    - name: Authenticate with private NPM package
      run: echo "//npm.pkg.github.com/:_authToken=${{ inputs.PAT_TOKEN }}" >> .npmrc
      shell: bash

    - name: Building Application for ${{ inputs.APP_DIR }}
      working-directory: ${{ inputs.APP_DIR }}
      run: |
        pwd
        git branch
        npm install
        touch .env
        ls -al
        echo REACT_APP_API_URL=${{ inputs.API_URL }} >> .env
        echo REACT_APP_ENTERPRISE_API_URL=${{ inputs.ENTERPRISE_API_URL }} >> .env
        echo REACT_APP_FILE_URL=${{ inputs.IMAGE_FILE_URL }} >> .env
        echo REACT_APP_IMAGE_URL=${{ inputs.IMAGE_FILE_URL }} >> .env
        echo REACT_APP_MAIL_URL=${{ inputs.MAIL_URL }} >> .env
        echo REACT_APP_CUSTOM_VERFICATION_URL=${{ inputs.CUSTOM_VERFICATION_URL }} >> .env
        echo REACT_APP_COGNITO_IDENTITYPOOL_ID=${{ inputs.COGNITO_IDENTITYPOOL_ID }} >> .env
        echo REACT_APP_COGNITO_REGION=${{ inputs.COGNITO_REGION }} >> .env
        echo REACT_APP_COGNITO_IDENTITYPOOLREGION=${{ inputs.COGNITO_REGION }} >> .env
        echo REACT_APP_COGNITO_USERPOOLID=${{ inputs.COGNITO_USERPOOLID }} >> .env
        echo REACT_APP_COGNITO_USERPOOLWEBCLIENTID=${{ inputs.COGNITO_USERPOOLWEBCLIENTID }} >> .env
        echo REACT_APP_COGNITO_DOMAIN=${{ inputs.COGNITO_DOMAIN }} >> .env
        echo REACT_APP_COGNITO_REDIRECTSIGNIN=${{ inputs.COGNITO_REDIRECTSIGNIN }} >> .env
        echo REACT_APP_COGNITO_REDIRECTSIGNOUT=${{ inputs.COGNITO_REDIRECTSIGNOUT }} >> .env
        echo REACT_APP_COGNITO_RESPONSETYPE=${{ inputs.COGNITO_RESPONSETYPE }} >> .env
        echo REACT_APP_RAZORPAY_KEY_ID=${{ inputs.RAZORPAY_KEY_ID }} >> .env
        echo REACT_APP_ENV=${{ inputs.APP_ENV }} >> .env
        echo REACT_APP_TINY_MCE_KEY=${{ inputs.TINYMCE_KEY }} >> .env
        echo REACT_APP_SAWO_LAB_KEY=${{ inputs.SAWOLAB_KEY }} >> .env
        cat .env
        cat .npmrc
        CI=false npm run build
      shell: bash

#     - name: Docker Login
#       uses: azure/docker-login@v1
#       with:
#         login-server: ${{ inputs.LOGIN_SERVER }}
#         username: ${{ inputs.DOCKER_LOGIN_USERNAME }}
#         password: ${{ inputs.DOCKER_LOGIN_PASS }}

#     - name: Building Docker Image for ${{ inputs.APP_DIR }}
#       working-directory: ${{ inputs.APP_DIR }}
#       run: |
#         pwd
#         docker build . -t ${{ inputs.LOGIN_SERVER }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}
#         docker push ${{ inputs.LOGIN_SERVER }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}
#       shell: bash
