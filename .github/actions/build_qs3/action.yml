name: "Build Application ðŸš§"
description: "Building Frontend Applications"

inputs:
  app-directory:
    description: "App Name"
    required: true

  node-version:
    description: "Node Version"
    required: true
  
  API_URL:
    description: "Backend API URL"
    required: false
  
  BLOG_URL:
    description: "Blog URL"
    required: false
  
  DASHBOARD_URL:
    description: "LabUI URL"
    required: false
  
  IMAGE_FILE_URL:
    description: "Static Assests URL"
    required: false
  
  LEADSQUARED_ACCESS_KEY:
    description: "LeadSquared Key"
    required: false
  
  LEADSQUARED_API_URL:
    description: "LeadSquared API URL"
    required: false
  
  LEADSQUARED_SECRET_KEY:
    description: "LeadSquared Secret"
    required: false
  
  QWIK_GPT_KEY:
    description: "QwikGPT Key"
    required: false
  
  SENDGRID_MAILING_ID:
    description: "Sendgrid Mailing ID"
    required: false
  
  SENDGRID_SECRET:
    description: "Sendgrid Secret"
    required: false
  
  STRAPI_BASE_URL:
    description: "Strapi Base URL"
    required: false
  
  STRAPI_IMAGE_URL:
    description: "Starpi Image URl"
    required: false

runs:
  using: composite
  steps:
    - name: Setup Node ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install Dependencies for ${{ inputs.app-directory }}
      working-directory: "${{ inputs.app-directory }}"
      run: yarn install
      shell: bash

    - name: Build Application using Yarn
      working-directory: "${{ inputs.app-directory }}"
      run:
        |
          touch .env
          ls -la
          yarn run build
          pwd          
          cat .env
      shell: bash

    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.LOGIN_SERVER }}
        username: ${{ inputs.DOCKER_LOGIN_USERNAME }}
        password: ${{ inputs.DOCKER_LOGIN_PASS }}

    - name: Building Docker Image for ${{ inputs.app-directory }}
      working-directory: ${{ inputs.app-directory }}
      run: |
        pwd
        docker build . -t ${{ inputs.LOGIN_SERVER }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}
        docker push ${{ inputs.LOGIN_SERVER }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}
      shell: bash
